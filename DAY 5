Networking

Check default networks
   docker network ls

Create custom network
   docker network create mynet

Run MySQL container in that network
   docker run -d --name db --network mynet -e MYSQL_ROOT_PASSWORD=root mysql

Run Ubuntu container in same network
   docker run -it --network mynet ubuntu bash

Test connectivity (inside Ubuntu container)
  apt-get update && apt-get install -y mysql-client
  mysql -h db -u root -p

(password = root)
👉 This works because containers in the same custom network can reach each other by container name.
-----------------------------
           Start the database container

Command explanation
 docker run -d --name db --network mynet -e MYSQL_ROOT_PASSWORD=root mysql

docker run -d 
       run a new container in detached mode (in background)
network mynet
       attach the container in user-defined network mynet 
       Containers in the same network can talk to each other by name
-e MYSQL_ROOT_PASSWORD=root
      -e = set an environment variable inside the container.
      Here, MySQL requires a root password at startup. We’re passing MYSQL_ROOT_PASSWORD=root.
      Without this, MySQL will refuse to start.
      Inside the container, the MySQL service reads this env var and sets the root password.
mysql
This is the image (from Docker Hub). It contains MySQL preinstalled. (starts a MySQL server)

So now, there’s a MySQL server running inside that container, accessible to others on mynet.

    “Run a MySQL database container in the background, call it db, put it in network mynet, and set its root password to root.”


        Start Ubuntu container inside same network

docker run -it --network mynet ubuntu bash

-it → interactive terminal
--network mynet → same bubble
ubuntu bash → open Ubuntu shell with bash

Now you’re inside Ubuntu’s terminal (still inside Docker).

        Connect from Ubuntu → db container
 
Inside Ubuntu, install the MySQL client:

apt update
apt install mysql-client -y

Then connect to the MySQL server running in db:

mysql -h db -u root -p

-h db → host is db (container name)
-u root → username
-p → prompt for password

When asked, type:
root

exit: \q
help: \h

✅ Result:
You’re using the Ubuntu container as a client to talk to the MySQL server inside another container — both connected through the same Docker network.


Practice: connect Ubuntu container to MySQL using container name. STEPS ABOVE


 
